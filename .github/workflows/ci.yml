name: CI & Deploy

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["main"]

jobs:
  ci:
    name: Lint / TypeCheck / Test / Build
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm typecheck
      - run: pnpm test
      - name: Integration Tests (API)
        run: pnpm test:api
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/app?sslmode=disable
      - run: pnpm build

  deploy:
    name: Deploy to Cloud Run (main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      CLOUD_RUN_SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
      ARTIFACT_REPOSITORY: ${{ secrets.ARTIFACT_REPOSITORY }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      - name: Configure Artifact Registry auth
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet
      - name: Build and Push Image
        run: |
          IMAGE="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${ARTIFACT_REPOSITORY}/app:${IMAGE_TAG}"
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
          gcloud builds submit --tag "${IMAGE}" .
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUD_RUN_SERVICE }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.IMAGE }}
          allow_unauthenticated: true
          cloud_sql_instances: ${{ secrets.CLOUD_SQL_CONNECTION }}
          env_vars: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DB_SSL=${{ secrets.DB_SSL }}
            DB_SSL_STRICT=${{ secrets.DB_SSL_STRICT }}
            DB_MAX_CONNECTIONS=${{ secrets.DB_MAX_CONNECTIONS }}
            CLOUD_SQL_CONNECTION=${{ secrets.CLOUD_SQL_CONNECTION }}
